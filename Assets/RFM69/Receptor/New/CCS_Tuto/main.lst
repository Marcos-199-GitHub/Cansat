CCS PCH C Compiler, Version 5.112, 29001               06-may.-23 11:50

               Filename:   I:\CanSat\Nueva carpeta\RFM69\Receptor\New\CCS_Tuto\main.lst

               ROM used:   104 bytes (0%)
                           Largest free fragment is 32664
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   0030
.................... #include <main.h>
.................... #include <18F4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... 
.................... #FUSES NOWDT                 	//No Watch Dog Timer
.................... 
.................... #use delay(clock=24MHz,crystal=16MHz,USB_LOW)
.................... 
.................... 
.................... 
.................... #use delay (clock=16000000)
0004:  CLRF   FEA
0006:  MOVLW  06
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BTFSC  FD8.2
000E:  GOTO   002E
0012:  MOVLW  05
0014:  MOVWF  01
0016:  CLRF   00
0018:  DECFSZ 00,F
001A:  BRA    0018
001C:  DECFSZ 01,F
001E:  BRA    0016
0020:  MOVLW  2E
0022:  MOVWF  00
0024:  DECFSZ 00,F
0026:  BRA    0024
0028:  BRA    002A
002A:  DECFSZ FEF,F
002C:  BRA    0012
002E:  RETURN 0
.................... 
.................... void main()
0030:  CLRF   FF8
0032:  BCF    FD0.7
0034:  MOVF   FC1,W
0036:  ANDLW  C0
0038:  IORLW  0F
003A:  MOVWF  FC1
003C:  MOVLW  07
003E:  MOVWF  FB4
.................... {
....................   while(TRUE)
....................   {
....................     output_high(PIN_B7); //LED ON
0040:  BCF    F93.7
0042:  BSF    F8A.7
....................     delay_ms(1000);      //1 Second Delay
0044:  MOVLW  04
0046:  MOVWF  05
0048:  MOVLW  FA
004A:  MOVWF  06
004C:  RCALL  0004
004E:  DECFSZ 05,F
0050:  BRA    0048
....................     output_low(PIN_B7);  //LED OFF
0052:  BCF    F93.7
0054:  BCF    F8A.7
....................     delay_ms(1000);      //1 Second Delay
0056:  MOVLW  04
0058:  MOVWF  05
005A:  MOVLW  FA
005C:  MOVWF  06
005E:  RCALL  0004
0060:  DECFSZ 05,F
0062:  BRA    005A
0064:  BRA    0040
....................   }
.................... }
0066:  SLEEP 

Configuration Fuses:
   Word  1: CE33   PLL4 CPUDIV3 USBDIV HSPLL FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
